// Generated by Haxe 4.1.5
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
var SideMenu = function() { };
SideMenu.__name__ = true;
SideMenu.main = function() {
	new modicum_Tag("app-page",{ markup : "<div class=\"ion-page\">\n\t\t\t\t<ion-header class=\"ion-no-border\">\n\t\t\t\t\t<ion-toolbar>\n\t\t\t\t\t\t<ion-menu-button slot=\"start\"></ion-menu-button>\n\t\t\t\t\t\t<ion-title>Page</ion-title>\n\t\t\t\t\t</ion-toolbar>\n\t\t\t\t</ion-header>\n\t\t\t\t\n\t\t\t\t<ion-content class=\"ion-padding\">\n\t\t\t\t\t<h1>[[text]]</h1>\n\t\t\t\t</ion-content>\n\t\t\t</div>"});
	new modicum_View(modicum_View.getBody(),{ markup : "<ion-app>\n\t\t\t\t<ion-split-pane content-id=\"main\">\n\t\t\t\t\t<ion-menu content-id=\"main\">\n\t\t\t\t\t\t<ion-list aka=\"menu-list\">\n\t\t\t\t\t\t\t<ion-list-header>\n\t\t\t\t\t\t\t\t<h1>Menu</h1>\n\t\t\t\t\t\t\t</ion-list-header>\n\t\t\t\t\t\t</ion-list>\n\t\t\t\t\t</ion-menu>\n\n\t\t\t\t\t<ion-nav id=\"main\" root=\"app-page\"></ion-nav>\n\t\t\t\t</ion-split-pane>\n\t\t\t</ion-app>"});
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
haxe_IMap.__isInterface__ = true;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native"}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	__class__: haxe_ValueException
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	__class__: haxe_ds_StringMap
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var modicum_DataConsumer = function() { };
modicum_DataConsumer.__name__ = true;
modicum_DataConsumer.__isInterface__ = true;
modicum_DataConsumer.prototype = {
	__class__: modicum_DataConsumer
};
var modicum_Data = function(d) {
	this.consumers = new haxe_ds_List();
	this.data = d;
};
modicum_Data.__name__ = true;
modicum_Data.prototype = {
	setData: function(d) {
		this.data = d;
		var _g_head = this.consumers.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var c = val;
			c.setData(d);
		}
	}
	,addConsumer: function(c,setData) {
		if(setData == null) {
			setData = true;
		}
		this.consumers.add(c);
		if(setData) {
			c.setData(this.data);
		}
	}
	,removeConsumer: function(c,setNull) {
		if(setNull == null) {
			setNull = false;
		}
		this.consumers.remove(c);
		if(setNull) {
			c.setData(null);
		}
	}
	,__class__: modicum_Data
};
var modicum_DomTools = function() { };
modicum_DomTools.__name__ = true;
modicum_DomTools.getDefaultDoc = function() {
	return window.document;
};
modicum_DomTools.domRoot = function(d) {
	return null;
};
modicum_DomTools.domBody = function(d) {
	return d.body;
};
modicum_DomTools.domHead = function(d) {
	return d.head;
};
modicum_DomTools.domOwnerDocument = function(e) {
	return e.ownerDocument;
};
modicum_DomTools.domCreateElement = function(doc,tag) {
	return doc.createElement(tag);
};
modicum_DomTools.domCreateNode = function(doc,s) {
	return doc.createTextNode(s);
};
modicum_DomTools.domAppend = function(p,child,before) {
	if(before == null) {
		p.appendChild(child);
	} else {
		p.insertBefore(child,before);
	}
};
modicum_DomTools.domFirstElementChild = function(e) {
	return e.firstElementChild;
};
modicum_DomTools.domMapChildren = function(e,f) {
	var _g = 0;
	var _g1 = e.childNodes;
	while(_g < _g1.length) {
		var n = _g1[_g];
		++_g;
		if(!f(n)) {
			break;
		}
	}
};
modicum_DomTools.domTagname = function(e) {
	return e.tagName;
};
modicum_DomTools.domSetAttr = function(e,k,v) {
	if(v != null) {
		e.setAttribute(k,v);
	} else {
		e.removeAttribute(k);
	}
};
modicum_DomTools.domSetAttr2 = function(e,k,v) {
	e.setAttribute(k,v);
};
modicum_DomTools.domGetAttr = function(e,k) {
	return e.getAttribute(k);
};
modicum_DomTools.domMapAttributes = function(e,f) {
};
modicum_DomTools.domSetClass = function(e,k,v) {
	if(v) {
		e.classList.add(k);
	} else {
		e.classList.remove(k);
	}
};
modicum_DomTools.domSetInnerHTML = function(e,v) {
	e.innerHTML = v;
};
modicum_DomTools.domGetValue = function(n) {
	return n.nodeValue;
};
modicum_DomTools.domSetValue = function(n,v) {
	n.nodeValue = v;
};
modicum_DomTools.domCleanMarkup = function(markup) {
	var _this_r = new RegExp("\n\\s+","g".split("u").join(""));
	return markup.replace(_this_r,"\n");
};
var modicum_Tag = function(name,props,didInit,willDispose) {
	this.name = name;
	this.props = props;
	this.didInit = didInit;
	this.willDispose = willDispose;
	this.ids = new haxe_ds_StringMap();
	this.instances = new haxe_ds_IntMap();
	var f1 = $bind(this,this.connectedCallback);
	var f2 = $bind(this,this.disconnectedCallback);
	customElements.define(name, class extends HTMLElement {
			connectedCallback() {f1(this)}
			disconnectedCallback() {f2(this)}
		});
};
modicum_Tag.__name__ = true;
modicum_Tag.prototype = {
	get: function(id) {
		return this.ids.h[id];
	}
	,connectedCallback: function(e) {
		var id = e.id;
		var nr = modicum_Tag.nextNr++;
		var view = new modicum_TagView(e,this.props);
		if(id != null && id != "") {
			this.ids.h[id] = view;
		}
		Reflect.setProperty(e,"_tag_instance_nr",nr);
		this.instances.h[nr] = view;
		if(this.didInit != null) {
			this.didInit(view);
		}
	}
	,disconnectedCallback: function(e) {
		var nr = Reflect.getProperty(e,"_tag_instance_nr");
		if(this.willDispose != null) {
			this.willDispose(this.instances.h[nr]);
		}
		if(e.id != null && e.id != "") {
			var key = e.id;
			var _this = this.ids;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
		this.instances.remove(nr);
	}
	,__class__: modicum_Tag
};
var modicum_View = function(parent,props,didInit,cloneOf) {
	this.rangeEnd = null;
	this.rangeStart = 0;
	this.parent = parent;
	this.root = parent != null ? parent.root : cloneOf != null ? cloneOf.root : this;
	this.props = props;
	this.didInit = didInit;
	this.cloneOf = cloneOf;
	this.children = [];
	this.dom = this.makeDom();
	this.init();
	this.link();
	if(didInit != null) {
		didInit(this);
	}
};
modicum_View.__name__ = true;
modicum_View.__interfaces__ = [modicum_DataConsumer];
modicum_View.getBody = function() {
	return modicum_View.body;
};
modicum_View.prototype = {
	getId: function() {
		return this.dom.getAttribute("id");
	}
	,setId: function(id) {
		var e = this.dom;
		if(id != null) {
			e.setAttribute("id",id);
		} else {
			e.removeAttribute("id");
		}
	}
	,setNode: function(aka,text) {
		(js_Boot.__cast(this.nodes.h[aka] , Node)).nodeValue = text;
	}
	,getElement: function(aka) {
		return this.nodes.h[aka];
	}
	,setData: function(d,useDatapath) {
		if(useDatapath == null) {
			useDatapath = true;
		}
		if(useDatapath && this.props.datapath != null) {
			d = this.props.datapath(this,d);
		}
		if(((d) instanceof Array)) {
			this.setArray(d);
		} else if(d != null) {
			var e = this.dom;
			e.classList.remove("hidden");
			if(this.props.ondata != null) {
				this.props.ondata(this,d);
			}
			if(this.props.childrendata != null) {
				d = this.props.childrendata(this,d);
			}
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.setData(d);
			}
		} else {
			var e = this.dom;
			e.classList.add("hidden");
			this.clearClones();
		}
	}
	,setDataRange: function(start,end) {
		this.rangeStart = start;
		this.rangeEnd = end;
		if(this.rangeData != null) {
			this.setArray(this.rangeData);
		}
	}
	,link: function() {
		if(this.parent != null) {
			var plug = this.props.plug != null ? this.props.plug : "default";
			var pdom = this.parent.nodes.h[plug];
			if(this.cloneOf != null) {
				if(this.props.dom == null) {
					var child = this.dom;
					var before = this.cloneOf.dom;
					if(before == null) {
						pdom.appendChild(child);
					} else {
						pdom.insertBefore(child,before);
					}
				}
			} else {
				this.parent.children.push(this);
				if(this.props.dom == null) {
					var child = this.dom;
					var before = null;
					if(before == null) {
						pdom.appendChild(child);
					} else {
						pdom.insertBefore(child,before);
					}
				}
			}
		}
	}
	,unlink: function() {
		if(this.parent != null) {
			if(this.cloneOf == null) {
				HxOverrides.remove(this.parent.children,this);
			}
			this.dom.remove();
		}
	}
	,init: function() {
		this.nodes = new haxe_ds_StringMap();
		this.collectNodes(this.dom);
		if(!Object.prototype.hasOwnProperty.call(this.nodes.h,"default")) {
			this.nodes.h["default"] = this.dom;
		}
		this.nodes.h["root"] = this.dom;
		if(this.props.ondata != null) {
			var e = this.dom;
			e.classList.add("hidden");
		}
	}
	,makeDom: function() {
		var ret;
		if(this.props.dom != null) {
			ret = this.props.dom;
		} else if(this.props.markup != null) {
			var e = this.root.dom.ownerDocument.createElement("div");
			var _this_r = new RegExp("\n\\s+","g".split("u").join(""));
			e.innerHTML = this.props.markup.replace(_this_r,"\n");
			ret = e.firstElementChild;
		} else {
			ret = this.root.dom.ownerDocument.createElement("div");
		}
		return ret;
	}
	,collectNodes: function(e) {
		var _gthis = this;
		var aka = e.getAttribute("aka");
		if(aka != null) {
			var v = null;
			if(v != null) {
				e.setAttribute("aka",v);
			} else {
				e.removeAttribute("aka");
			}
			this.nodes.h[aka] = e;
		}
		var _g = 0;
		var _g1 = e.childNodes;
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			if(((n) instanceof HTMLElement)) {
				_gthis.collectNodes(n);
			} else if(((n) instanceof Node)) {
				if(modicum_View.NODE_RE.match((js_Boot.__cast(n , Node)).nodeValue)) {
					(js_Boot.__cast(n , Node)).nodeValue = "";
					var this1 = _gthis.nodes;
					var key = modicum_View.NODE_RE.matched(1);
					this1.h[key] = n;
				}
			}
		}
	}
	,setArray: function(v) {
		this.rangeData = v;
		if(this.rangeStart != 0 || this.rangeEnd != null) {
			v = this.rangeEnd != null ? v.slice(this.rangeStart,this.rangeEnd) : v.slice(this.rangeStart);
		}
		var count = Math.max(v.length - 1,0);
		if(this.clones == null) {
			this.clones = [];
		}
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			if(i >= this.clones.length) {
				this.clones.push(new modicum_View(this.parent,this.props,this.didInit,this));
			}
			this.clones[i].setData(v[i],false);
		}
		this.clearClones(count);
		this.setData(v.length > 0 ? v[v.length - 1] : null,false);
	}
	,clearClones: function(count) {
		if(count == null) {
			count = 0;
		}
		if(this.clones != null) {
			while(this.clones.length > count) this.clones.pop().unlink();
		}
	}
	,__class__: modicum_View
};
var modicum_TagView = function(e,props) {
	this.dom = e;
	modicum_View.call(this,null,props);
};
modicum_TagView.__name__ = true;
modicum_TagView.__super__ = modicum_View;
modicum_TagView.prototype = $extend(modicum_View.prototype,{
	makeDom: function() {
		if(this.props.markup != null) {
			this.dom.innerHTML = this.props.markup;
		}
		return this.dom;
	}
	,__class__: modicum_TagView
});
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
modicum_Tag.NR_PROP = "_tag_instance_nr";
modicum_Tag.nextNr = 0;
modicum_View.NODE_RE = new EReg("\\[\\[(\\w+)\\]\\]","");
modicum_View.body = new modicum_View(null,{ dom : modicum_DomTools.domBody(modicum_DomTools.getDefaultDoc())});
SideMenu.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
